<?PHP $CONFIG=array("ent"=>array("https://torrentzota127.com/t/4/16.html",),"drama"=>array("https://torrentzota127.com/t/2/13.html",),"docu"=>array("https://torrentzota127.com/t/4/17.html",),"all"=>array("ent","drama","docu"),"_page_link_preprocess"=>array(),"_page_link"=>'!<a class="item-link" title="(?P<title>.+?)" href="(?P<link>.+?)">!si',"_down_link_preprocess"=>array(),"_down_link"=>'magnet',"_magnet_follow_link"=>'');$KEYWORDS=array("set01"=>array("라디오스타 720p-NEXT","놀면 뭐하니 720p-NEXT","나 혼자 산다 720p-NEXT"),"set02"=>array("유 퀴즈 온 더 블럭 720p-NEXT"));$PROXY='';define('VERSION','tz127');define('AUTO_UPDATE',true);define('MAGNET_CACHE_CONSERVE_DAYS',450);define('UPDATE_URL','https://raw.githubusercontent.com/banyazavi/tsharp/torr/torr.encoded');$logger=new Mylogger();$logger->setLevel('INFO');if(file_exists('UserConfig.php'))include 'UserConfig.php';class MyLogger{private $logf=null;private $level='INFO';public function __construct(){date_default_timezone_set('Asia/Seoul');$this->logf=basename(__FILE__,'.php').'.log';}public function setLevel($level){$this->level=$level;}public function debug($msg){if($this->level=='DEBUG'){$this->_log('D',$msg);}}public function info($msg){if($this->level=='INFO'||$this->level=='DEBUG'){$this->_log('I',$msg);}}public function warn($msg){if($this->level=='WARN'||$this->level=='INFO'||$this->level=='DEBUG'){$this->_log('W',$msg);}}public function error($msg){$this->_log('E',$msg);}private function _log($level,$msg){$t=microtime(true);$milli=sprintf("%03d",($t-floor($t))*1000);$dt=sprintf("%s.%s",date('Y-m-d H:i:s'),$milli);$bt=debug_backtrace();$func=isset($bt[2])?$bt[2]['function']:'__main__';$caller=$bt[1];$file=basename($caller['file']);$output=sprintf("%s %s <%s:%s:%d> %s\n",$dt,$level,$file,$func,$caller['line'],print_r($msg,true));error_log($output,3,$this->logf);}}function curl_fetch($url,$init=false){global $logger;global $PROXY;static $ch=null;static $cnt=0;(++$cnt)%10==0&&sleep(2);$cookie_nm='./cookie.txt';if($ch==null||$init==true){$ch!=null&&curl_close($ch);$ch=curl_init();curl_setopt($ch,CURLOPT_USERAGENT,'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36');curl_setopt($ch,CURLOPT_SSL_VERIFYPEER,false);curl_setopt($ch,CURLOPT_AUTOREFERER,true);curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);curl_setopt($ch,CURLOPT_COOKIESESSION,true);curl_setopt($ch,CURLOPT_COOKIEJAR,$cookie_nm);curl_setopt($ch,CURLOPT_FOLLOWLOCATION,true);curl_setopt($ch,CURLOPT_VERBOSE,false);curl_setopt($ch,CURLOPT_HEADER,true);if($PROXY){curl_setopt($ch,CURLOPT_PROXYTYPE,CURLPROXY_HTTP);curl_setopt($ch,CURLOPT_HTTPPROXYTUNNEL,1);curl_setopt($ch,CURLOPT_SSL_VERIFYPEER,0);curl_setopt($ch,CURLOPT_PROXY,$PROXY);$logger->info("Proxy setting applied. Proxy info: $PROXY");}}curl_setopt($ch,CURLOPT_URL,$url);$response=curl_exec($ch);$http_code=curl_getinfo($ch,CURLINFO_HTTP_CODE);list($header,$body)=explode("\r\n\r\n",$response,2);$size=strlen($body);$logger->debug("cURL fetch http_code:[$http_code] url:[$url]  size:[$size]");return array($http_code,$header,$body);}function url_join($base,$relative_url){if(parse_url($relative_url,PHP_URL_SCHEME)!='')return $relative_url;if($relative_url[0]=='#'||$relative_url[0]=='?')return $base.$relative_url;$parsed=parse_url($base);$scheme=$parsed['scheme'];$host=$parsed['host'];$path=isset($parsed['path'])?$parsed['path']:'';$path=preg_replace('#/[^/]*$#','',$path);if($relative_url[0]=='/')$path='';$abs="$host$path/$relative_url";$re=array('#(/\.?/)#','#/(?!\.\.)[^/]+/\.\./#');for($n=1;$n>0;$abs=preg_replace($re,'/',$abs,-1,$n)){}return $scheme.'://'.$abs;}function find_magnet($source){global $logger;$html=null;$magnet=null;if(preg_match('/^http/si',$source,$match)){list($http_code,$header,$html)=curl_fetch($source);if(preg_match('/^Location: (magnet:.+)$/mi',$header,$match)){$magnet=$match[1];$logger->debug("Location 헤더에서 magnet 링크를 찾았습니다: ".$magnet);}}else{$html=$source;}if(preg_match('/href=[\'"]?(magnet:.+?)[\s\'">]/si',$html,$match)){$magnet=$match[1];$logger->debug("HTML 페이지에서 magnet 링크를 찾았습니다: ".$magnet);}return $magnet;}function is_url($url){return isset(parse_url($url)['host']);}function preprocess($text,$patterns){global $logger;$text_bf=$text;$text_af=$text;$count=0;for($i=0;$i<count($patterns);$i+=2){$text_af=preg_replace($patterns[$i],$patterns[$i+1],$text_bf,-1,$count);if($count==0){$logger->warn('preg_replace pattern is not found: '.$patterns[$i]);$text_af=$text_bf;}else{$bf_len=strlen($text_bf);$af_len=strlen($text_af);$logger->debug("text changed for $count times. Length of Before text is $bf_len and after text is $af_len");$text_bf=$text_af;}}return $text_af;}function url_normalize($url){return str_replace('&amp;','&',$url);}function file_regex_update($filename,$regex_fr,$regex_to){$origin=file_get_contents($filename);$updated=preg_replace($regex_fr,$regex_to,$origin);file_put_contents($filename,$updated);}function self_update(){global $logger;if(!AUTO_UPDATE)return;$update_check_file=sys_get_temp_dir().DIRECTORY_SEPARATOR.'torr.updatecheck';if(@file_get_contents($update_check_file)==date('Ymd'))return;file_put_contents($update_check_file,date('Ymd'));list($http_code,$header,$remote_base64)=curl_fetch(UPDATE_URL);if($http_code!=200){$logger->warn("업데이트 파일 다운로드 오류입니다. 응답코드: $http_code");return;}$local_base64=base64_encode(file_get_contents(__FILE__));if($local_base64!=$remote_base64){$logger->info("torr가 변경되어 업데이트를 시작합니다.");!file_exists('backup')&&mkdir('backup');$backupf=sprintf("backup/%s.%s.php",basename(__FILE__,'.php'),VERSION);copy(__FILE__,$backupf);$logger->info(sprintf("업데이트 전에 현재 torr를 백업했습니다: %s -> %s",basename(__FILE__),$backupf));$decoded_source=base64_decode($remote_base64);file_put_contents(__FILE__,$decoded_source);$logger->info("torr를 업데이트했습니다. 다음번 요청 시 반영됩니다.");}else{$logger->info("현재 torr가 최신 버전입니다. 내일 다시 확인합니다.");}}function parse_param(){global $logger;$logger->info(sprintf("Param: b=[%s] k=[%s]",isset($_GET['b'])?$_GET['b']:null,isset($_GET['k'])?$_GET['k']:null));$conf=$GLOBALS['CONFIG'];$keyw=$GLOBALS['KEYWORDS'];$b=isset($_GET['b'])?trim($_GET['b']):'all';if(!isset($conf[$b])){$logger->error($_GET['b']."는 유효하지 않은 게시판입니다.");return;}$boards=array();foreach($conf[$b]as $item){if(is_url($item)){$boards[]=array('category'=>$b,'url'=>$item);}else{foreach($conf[$item]as $item2){$boards[]=array('category'=>$item,'url'=>$item2);}}}$k=isset($_GET['k'])?trim($_GET['k']):'';$keywords=isset($keyw[$k])?$keyw[$k]:explode('|',$k);$keywords=str_replace(' ','%20',$keywords);if(count($keywords)>1){$logger->info(sprintf("다중검색 키워드: %d개 (%s)",count($keywords),join(", ",$keywords)));}$fetch_urls=array();foreach($boards as $board){foreach($keywords as $keyword){$fetch_urls[]=array('category'=>$board['category'],'url'=>str_replace('{k}',$keyword,$board['url']));}}$logger->debug($fetch_urls);return $fetch_urls;}function update_domain($board_urls){global $logger;global $OLD_DOMAIN,$NEW_DOMAIN;$parsed=parse_url($board_urls[0]['url']);$current_domain=$parsed['host'];$changed_domain=$current_domain;$logger->debug("\$current_domain = $current_domain");if(isset($OLD_DOMAIN)&&$OLD_DOMAIN==$current_domain){$changed_domain=$NEW_DOMAIN;$logger->debug("UserConfig.php 파일의 NEW_DOMAIN 정보를 사용함: $NEW_DOMAIN");}$check_url=$parsed["scheme"].'://'.$changed_domain;list($http_code,$header,$html)=curl_fetch($check_url);if(preg_match('/^Location: (.+)$/mi',$header,$match)){$changed_domain=parse_url($match[1])['host'];$logger->info("Location 헤더에서 신규 도메인을 찾았습니다: ".$changed_domain);}else if($http_code!=200){$new_domain_founded=false;if(preg_match('/^(.+?)([\d]{1,3})(\..+)$/',$changed_domain,$match)){$domain_01=$match[1];$domain_02=intval($match[2]);$domain_03=$match[3];for($i=0;$i<10;$i++){$domain_02++;$try_domain=$domain_01.$domain_02.$domain_03;$try_url=$parsed["scheme"].'://'.$try_domain;list($http_code2,$header2,$html2)=curl_fetch($try_domain);$logger->info("Tried to check if $try_url is alive. and http_code is $http_code2");if($http_code2==200){$new_domain_founded=true;$changed_domain=$try_domain;$logger->info("변경된 도메인을 찾았습니다: ".$changed_domain);break;}}}if(!$new_domain_founded){$logger->error("torrent 사이트 [$current_domain] 가(이) 죽은 듯 합니다. 종료합니다.");error_response("torrent 사이트 [$current_domain] 가(이) 죽은 듯 합니다. 종료합니다.");self_update();exit(0);}}if($current_domain!=$changed_domain){foreach($board_urls as&$burl){$burl['url']=str_replace($current_domain,$changed_domain,$burl['url']);}$logger->info("도메인을 변경합니다: ".$current_domain."  >  ".$changed_domain);$logger->debug($board_urls);}if($current_domain!=$changed_domain){if(!file_exists('UserConfig.php')){$contents="<?PHP\n\n\$OLD_DOMAIN = '$current_domain';\n\$NEW_DOMAIN = '$changed_domain';\n";file_put_contents('UserConfig.php',$contents);$logger->info("UserConfig.php에 변경된 도메인 정보를 추가함");}else{if(!isset($OLD_DOMAIN)){file_put_contents('UserConfig.php',"\n\$OLD_DOMAIN = '$current_domain';\n",FILE_APPEND);$logger->info("UserConfig.php에 도메인 정보를 추가함: \$OLD_DOMAIN = '$current_domain'");}else if($OLD_DOMAIN!=$current_domain){file_regex_update('UserConfig.php','/^\$OLD_DOMAIN = .+/im',"\$OLD_DOMAIN = '$current_domain';");$logger->info("UserConfig.php에 도메인 정보를 갱신함: \$OLD_DOMAIN = '$current_domain'");}if(!isset($NEW_DOMAIN)){file_put_contents('UserConfig.php',"\n\$NEW_DOMAIN = '$changed_domain';\n",FILE_APPEND);$logger->info("UserConfig.php에 도메인 정보를 추가함: \$NEW_DOMAIN = '$changed_domain'");}else if($NEW_DOMAIN!=$changed_domain){file_regex_update('UserConfig.php','/^\$NEW_DOMAIN = .+/im',"\$NEW_DOMAIN = '$changed_domain';");$logger->info("UserConfig.php에 도메인 정보를 갱신함: \$NEW_DOMAIN = '$changed_domain'");}}}return $board_urls;}function get_items($board_urls){global $logger;$self='http'.(isset($_SERVER['HTTPS'])?'s':'').'://'.$_SERVER['HTTP_HOST'].parse_url($_SERVER['REQUEST_URI'])['path'];$pattern=$GLOBALS['CONFIG']['_page_link'];$replace_patterns=$GLOBALS['CONFIG']['_page_link_preprocess'];$is_magnet=$GLOBALS['CONFIG']['_down_link']=='magnet';$items=array();$bcnt=0;foreach($board_urls as $burl){$bcnt++;$url=$burl['url'];$category=$burl['category'];list($http_code,$header,$html)=curl_fetch($url);if($http_code!=200){$logger->error("Error. Fetch from $url returned http_code $http_code");$logger->error($header);continue;}if($replace_patterns){$html=preprocess($html,$replace_patterns);}else{$logger->debug('HTML을 전처리 변경하지 않습니다.');}preg_match_all($pattern,$html,$matches,PREG_SET_ORDER);$cnt=0;foreach($matches as $match){$cnt++;$logger->debug($match);$title=trim(html_entity_decode(strip_tags($match['title']))," \t\n\r\0\x0B\xC2\xA0");$page=url_join($url,url_normalize($match['link']));$logger->debug("Normalized url is $page");if($is_magnet){$link=isset($match['magnet'])?$match['magnet']:get_magnet_link($page);}else{$link=$self.'?d='.base64_encode($page);}$items[]=array('title'=>$title,'link'=>$link,'page'=>$page,'category'=>$category);}$logger->info(sprintf("[%d/%d] %d건의 결과를 찾았습니다. 검색URL: %s",$bcnt,count($board_urls),$cnt,$url));}$logger->debug($items);return $items;}function get_magnet_link($url){global $logger;$magnet=null;$replace_patterns=$GLOBALS['CONFIG']['_down_link_preprocess'];if($magnet=magnet_cache_control('Query',$url)){$logger->debug("캐시에서 마그넷 링크를 찾았습니다.");$logger->debug("요청URL: $url");$logger->debug("Magnet: $magnet");return $magnet;}list($http_code,$header,$html)=curl_fetch($url);if($http_code!=200){$logger->error("Error. Fetching page from $url returned http_code $http_code");return null;}if($replace_patterns){$html=preprocess($html,$replace_patterns);}$magnet=find_magnet($html);if(!$magnet&&$GLOBALS['CONFIG']['_magnet_follow_link']){$pattern=$GLOBALS['CONFIG']['_magnet_follow_link'];$logger->debug("_magnet_follow_link를 찾아봅니다: $pattern");if(preg_match($pattern,$html,$match)){$logger->debug("_magnet_follow_link를 찾았습니다: ".$match['url']);$follow_url=url_join($url,$match['url']);$logger->debug('마그넷 링크를 찾기위해 다음 페이지로 이동합니다. '.$follow_url);$magnet=find_magnet($follow_url);}else{$logger->error('오류! _magnet_follow_link 패턴을 찾을 수 없습니다.');}}$magnet&&magnet_cache_control('Update',$url,$magnet);return $magnet;}function magnet_cache_control($action,$url=null,$magnet=null){global $logger;static $magnet_cache='N/A',$cache_file=null,$cache_updated=false;$key=null;if($url){if(preg_match('!^https?://[^/]+(/.*)$!',$url,$match)){$key=$match[1];}if($cache_file==null){$host=parse_url($url)['host'];$cache_file=sys_get_temp_dir().DIRECTORY_SEPARATOR.'torr.'.$host.'.cache';$logger->debug("캐시파일은 $cache_file 입니다.");}}if($action=='Query'){if($magnet_cache=='N/A'){$content=@file_get_contents($cache_file);if($content!=false){$magnet_cache=unserialize($content);}else{$magnet_cache=array();}}if(isset($magnet_cache[$key])){$magnet=$magnet_cache[$key]['magnet'];$logger->debug("캐시에서 마그넷 링크를 찾았습니다. key=[$key] magnet=[$magnet]");return $magnet;}}elseif($action=='Update'){if($magnet_cache=='N/A'){$logger->error("Error. 마그넷 캐시가 생성되지 않아 Update 처리를 할 수 없습니다.");self_update();exit(1);}$magnet_cache[$key]=array('magnet'=>$magnet,'inserted'=>time());$cache_updated=true;}elseif($action=='Write'){if($cache_updated){$deleted=0;foreach($magnet_cache as $key=>$item){if($item['inserted']+(MAGNET_CACHE_CONSERVE_DAYS*60*60*24)<time()){unset($magnet_cache[$key]);$deleted++;}}$deleted>0&&$logger->debug("Deleted $deleted cache items.");$content=serialize($magnet_cache);file_put_contents($cache_file,$content);$cache_updated=false;}}}function build_rss($items){global $logger;$self='http'.(isset($_SERVER['HTTPS'])?'s':'').'://'.$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];$b=isset($_GET['b'])?trim($_GET['b']):'';$k=isset($_GET['k'])?trim($_GET['k']):'';if($b==''&&$k==''){$title="It's torr!";}else{$title="It's torr! (".($b?$b.": ":"").($k?$k:"All").")";}$rss="<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<rss version=\"2.0\">\n";$rss.="<channel><title>$title</title><link>".htmlentities($self)."</link><description>A simple torrent feed by torr.</description>\n";foreach($items as $item){if($item['link']){$rss.="<item><title><![CDATA[".$item['title']."]]></title><link>".htmlentities($item['link'])."</link>";$rss.="<comments><![CDATA[".htmlentities($item['page'])."]]></comments><category><![CDATA[".$item['category']."]]></category></item>\n";}}$rss.="</channel>\n</rss>";$logger->info("RSS를 생성했습니다. 건수: ".count($items));$logger->debug($rss);return $rss;}function response($data){header('Content-Type: application/rss+xml; charset=utf-8');echo $data;}function error_response($data){header('Content-Type: text/plain; charset=utf-8');echo $data;}function make_rss(){$board_urls=parse_param();$confirmed_urls=update_domain($board_urls);$torrent_items=get_items($confirmed_urls);$rss=build_rss($torrent_items);magnet_cache_control('Write');response($rss);}function download_torrent($link){global $logger;$logger->debug("Downloading torrent file from $link");list($http_code,$header,$body)=curl_fetch($link);if($http_code!=200){$logger->error("Error. Download torrent file from $link returned http_code $http_code");return;}if(preg_match('/^Content-Disposition:.+$/mi',$header,$match)){header("Content-Type: application/x-bittorrent");header(trim($match[0]));echo $body;}}function do_download($url){global $logger;$replace_patterns=$GLOBALS['CONFIG']['_down_link_preprocess'];list($http_code,$header,$html)=curl_fetch($url);if($http_code!=200){$logger->error("Error. Fetch from $url returned http_code $http_code");$logger->error($header);return;}$html=preprocess($html,$replace_patterns);$pattern=$GLOBALS['CONFIG']['_down_link'];if(preg_match($pattern,$html,$match)){$logger->debug($match);$link=url_join($url,$match[1]);download_torrent($link);}}function main(){global $logger;$logger->info("torr 버전: ".VERSION);$logger->info("새로운 요청이 들어왔습니다. IP=".$_SERVER['REMOTE_ADDR']);$logger->info("REQUEST_URI: ".$_SERVER['REQUEST_URI']);$logger->debug($_SERVER);if(isset($_GET['d'])){do_download(base64_decode($_GET['d']));}else{make_rss();self_update();}}function gen_base64(){$local_base64=base64_encode(file_get_contents(__FILE__));print($local_base64);}if(isset($argc)&&$argc>1&&$argv[1]=='base64'){gen_base64();}else{main();}